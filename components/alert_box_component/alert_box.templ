package alertboxcomponent

import "fmt"

const (
	Alert = iota
	Info
	Success
	Warning
	Error
)

var alertClassMap = map[int]string{
	Info:    "alert-info",
	Success: "alert-success",
	Warning: "alert-warning",
	Error:   "alert-error",
}

templ AlertBoxIcon(alertType int) {
	switch alertType {
		case Info:
			<svg
				xmlns="http://www.w3.org/2000/svg"
				fill="none"
				viewBox="0 0 24 24"
				class="h-6 w-6 shrink-0 stroke-current"
			>
				<path
					stroke-linecap="round"
					stroke-linejoin="round"
					stroke-width="2"
					d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
				></path>
			</svg>
		case Warning:
			<svg
				xmlns="http://www.w3.org/2000/svg"
				class="h-6 w-6 shrink-0 stroke-current"
				fill="none"
				viewBox="0 0 24 24"
			>
				<path
					stroke-linecap="round"
					stroke-linejoin="round"
					stroke-width="2"
					d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"
				></path>
			</svg>
		case Success:
			<svg
				xmlns="http://www.w3.org/2000/svg"
				class="h-6 w-6 shrink-0 stroke-current"
				fill="none"
				viewBox="0 0 24 24"
			>
				<path
					stroke-linecap="round"
					stroke-linejoin="round"
					stroke-width="2"
					d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"
				></path>
			</svg>
		case Error:
			<svg
				xmlns="http://www.w3.org/2000/svg"
				class="h-6 w-6 shrink-0 stroke-current"
				fill="none"
				viewBox="0 0 24 24"
			>
				<path
					stroke-linecap="round"
					stroke-linejoin="round"
					stroke-width="2"
					d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"
				></path>
			</svg>
		default:
			<svg
				xmlns="http://www.w3.org/2000/svg"
				fill="none"
				viewBox="0 0 24 24"
				class="stroke-info h-6 w-6 shrink-0"
			>
				<path
					stroke-linecap="round"
					stroke-linejoin="round"
					stroke-width="2"
					d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
				></path>
			</svg>
	}
}

templ AlertBox(text string, alertType ...int) {
	if len(alertType) == 0 {
		@alertBox(text, Alert)
	} else {
		@alertBox(text, alertType[0])
	}
}

templ alertBox(text string, alertType int) {
	<div
		id="alert-box"
		role="alert"
		class={ fmt.Sprintf("alert %v has-[span:empty]:opacity-0 transition-opacity fixed bottom-2 right-2 w-auto", alertClassMap[alertType]) }
		hx-swap-oob="true"
		hx-on::after-settle="setTimeout(() => this.style.opacity=0, 4000)"
	>
		@AlertBoxIcon(alertType)
		<span>{ text }</span>
	</div>
}
